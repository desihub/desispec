.. _piperun:


Running a Production
======================

Now that we have seen how to create a production and use the individual pipeline tools, we can now look at a detailed example.  For this example, we'll assume that the raw data is located in ${SCRATCH}/desi/raw.  We'll also assume that our data reduction directory is ${SCRATCH}/desi/redux.


Make a Small Production
-------------------------

One useful way of testing on a small dataset is to limit the analysis to a single spectrograph.  We'll assume that all of our environment setup discussed in :ref:`install` is done by running a shell function "desi".  We put this command (and any others) into a snippet of text that will be inserted into the pipeline running scripts to initialize our environment::

    %> cat env.sh
    desi

Now we create a production with the first spectrograph.  We also pass in the debug option, which will enable the DEBUG logging level in all pipeline scripts::

    %> desi_pipe --debug \
        --env env.sh \
        --raw ${SCRATCH}/desi/raw \
        --redux ${SCRATCH}/desi/redux \
        --prod smalltest \
        --spectrographs 0

This will create the production directory structure and also make a shell snippet that we can source whenever we want to work with this production::

    %> cd ${SCRATCH}/desi/redux/smalltest
    %> cat setup.sh

    # Generated by desi_pipe
    export DESI_SPECTRO_DATA=/scratch/desi/raw
    export DESI_SPECTRO_REDUX=/scratch/desi/redux
    export PRODNAME=smalltest

    export DESI_LOGLEVEL="DEBUG"

    %> source setup.sh

Now go into the "run" directory.  The "logs" subdirectory contains nightly directories with the logs from each task.  The high


