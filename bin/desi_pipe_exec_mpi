#!/usr/bin/env python
#
# See top-level LICENSE.rst file for Copyright information
#
# -*- coding: utf-8 -*-

"""Use MPI to run one or more DESI pipeline tasks of a single type.
"""

import sys
from desispec.parallel import use_mpi

comm = None
rank = 0
nproc = 1
if use_mpi():
    from mpi4py import MPI
    comm = MPI.COMM_WORLD
    rank = comm.rank
    nproc = comm.size
else:
    print("mpi4py not found, using only one process")

# FIXME:  Can we can do better than this hack?
# Add a random delay before starting to avoid too many processes loading the
# same library files at the same time this is hopefully a temporary hack
# we can have as many as 6000 procs, and we accept to lose at max 1 minute
import time
import numpy.random
numpy.random.seed(rank)
sec = numpy.random.uniform() * 0.01 * nproc
if rank == 0 :
    print("Each proc will wait a few seconds before starting, max is "
        "{} sec".format(0.01*nproc))
    sys.stdout.flush()
time.sleep(sec)

import desispec.scripts.pipe_exec as pipe_exec

if __name__ == '__main__':
    args = pipe_exec.parse()
    sys.exit(pipe_exec.main(args, comm=comm))
