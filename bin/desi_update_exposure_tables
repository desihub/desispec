#!/usr/bin/env python
# coding: utf-8

import argparse

## Import some helper functions, you can see their definitions by uncomenting the bash shell command
from desispec.scripts.updateexptables import update_exposure_tables


def get_parser():
    """
    Creates an arguments parser for the desi_update_exposure_tables script
    """
    parser = argparse.ArgumentParser(usage = "{prog} [options]")
    parser.add_argument("-n", "--nights", type=str,  default=None, help="nights as comma separated string")
    parser.add_argument("--night-range", type=str, default=None, help="comma separated pair of nights in form YYYYMMDD,YYYYMMDD"+\
                                                                      "for first_night,last_night specifying the beginning"+\
                                                                      "and end of a range of nights to be generated. "+\
                                                                      "last_night should be inclusive.")
    parser.add_argument("--obstypes", type=str, default=None, help="comma separated list of exposure types to include in "+\
                                                           "the exposure table, e.g. science,arc,flat,dark,zero, ...")
    parser.add_argument("-i", "--path-to-data", type=str, default=None, help="path to the raw input data")
    parser.add_argument("-o","--exp-table-path", type=str, default=None,  help="path to save exposure tables, without monthly subdirectory")
    parser.add_argument("--orig-filetype", type=str, default='csv', help="format type for original exposure tables")
    parser.add_argument("--out-filetype", type=str, default='csv', help="format type for output exposure tables")
    parser.add_argument("--verbose", action="store_true", help="print verbose output")
    parser.add_argument("--dry-run", action="store_true",
                        help="Perform a dry run, printing the changes that would be made and the final output table "+
                             "but not overwriting the actual files on disk.")
    parser.add_argument("--no-specprod", action="store_true", help="Create exposure table in repository location "+\
                                                                     "rather than the SPECPROD location.")
    return parser



if __name__ == '__main__':
    parser = get_parser()
    args = parser.parse_args()

    update_exposure_tables(**args.__dict__)