#!/usr/bin/env python


import sys,string
import astropy.io.fits as pyfits
import argparse
import numpy as np
from desiutil.log import get_logger


parser = argparse.ArgumentParser(formatter_class=argparse.ArgumentDefaultsHelpFormatter,
description="Compute a master bias from a set of raw data bias images",
epilog='''This is simply a median of the input raw images.'''
)
parser.add_argument('-i','--image', type = str, default = None, required = True, nargs="*",
                    help = 'path of image fits files')
parser.add_argument('-o','--outfile', type = str, default = None, required = True,
                    help = 'output median image filename')
parser.add_argument('--camera',type = str, required = True,
                    help = 'camera name BX,RX,ZX with X from 0 to 9')


args        = parser.parse_args()
log = get_logger()


log.info("read images ...")
images=[]
shape=None
primary_header=None
image_header=None
for filename in args.image :
    log.info("reading %s"%filename)
    fitsfile=pyfits.open(filename)

    image=fitsfile[args.camera].data.astype("float32")
    if shape is None :
        shape=image.shape
    images.append(image.ravel())

    if image_header is None :
        image_header=fitsfile[args.camera].header
    fitsfile.close()

log.info("compute median image ...")
medimage=np.median(images,axis=0).reshape(shape)

log.info("write result in %s ..."%args.outfile)
pyfits.writeto(args.outfile,medimage,clobber="True")

log.info("done")
